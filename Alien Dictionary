Alien Dictionary


C++ Code
----------------------------------

class Solution{
    public:
    string findOrder(string dict[], int n, int k) 
    {
        vector<vector<int>> adjList(k);
        int i,j,m;
        vector<int> indeg(k,0);
        for(i=0;i<n-1;i++)
        {
            m=min(dict[i].length(),dict[i+1].length());
            for(j=0;j<m;j++)
            {
                if(dict[i][j]!=dict[i+1][j])
                {
                    adjList[dict[i][j]-'a'].push_back(dict[i+1][j]-'a');
                    indeg[dict[i+1][j]-'a']++;
                    break;
                }
            }
        }
        
        string res;
        queue<int> topo;
        for(i=0;i<k;i++)
        {
            if(indeg[i]==0)
                topo.push(i);
        }
        
        while(!topo.empty())
        {
            int character = topo.front();
            topo.pop();
            res += character +'a';
            for(i=0;i<adjList[character].size();i++)
            {
                indeg[adjList[character][i]]--;
                if(indeg[adjList[character][i]]==0)
                    topo.push(adjList[character][i]);
            }
        }
        return res;
    }
};

